name: CI

on:
  push:
    branches: [ main, 5.x-dev ]
  pull_request:
    branches: [ main, 5.x-dev ]

jobs:
  composer:
    runs-on: ubuntu-latest
    container:
      image: joomlaprojects/docker-images:php8.3
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-dependencies

  phpcs:
    runs-on: ubuntu-latest
    needs: composer
    container:
      image: joomlaprojects/docker-images:php8.1
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-dependencies
      - name: Run PHP CS Fixer and PHPCS
        run: |
          echo $(date)
          ./vendor/bin/php-cs-fixer fix -vvv --dry-run --diff
          ./vendor/bin/phpcs --extensions=php -p --standard=ruleset.xml src/
          echo $(date)

  npm:
    runs-on: ubuntu-latest
    needs: phpcs
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-dependencies
        with:
          npm-cache: 'true'

  prepare_tests:
    runs-on: ubuntu-latest
    needs: npm
    container:
      image: joomlaprojects/docker-images:cypress8.2
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-dependencies
        with:
          npm-cache: 'true'
      - uses: ./.github/actions/setup-cypress
      - name: Build and prepare Joomla
        run: |
          vendor/bin/robo build
          curl https://joomla.org/latest -L --output joomla.zip
          mkdir joomla
          cp joomla.zip joomla/joomla.zip
          cd joomla
          unzip joomla.zip
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            dist/
            joomla.zip

  phpstan:
    runs-on: ubuntu-latest
    needs: prepare_tests
    container:
      image: joomlaprojects/docker-images:php8.2
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-dependencies
      - name: Create minimal joomla structure
        run: mkdir -p joomla
      - name: Run PHPStan
        run: vendor/bin/phpstan

  phpunit:
    runs-on: ubuntu-latest
    needs: prepare_tests
    container:
      image: joomlaprojects/docker-images:php8.2
    steps:
      - uses: actions/checkout@v4
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
      - uses: ./.github/actions/setup-dependencies
      - name: Setup Joomla for tests
        run: |
          unzip joomla.zip -d joomla/
      - name: Run PHPUnit
        run: vendor/bin/phpunit

  system-tests-mysql:
    runs-on: ubuntu-latest
    needs: prepare_tests
    container:
      image: joomlaprojects/docker-images:cypress8.2
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_USER: joomla_ut
          MYSQL_PASSWORD: joomla_ut
          MYSQL_DATABASE: test_joomla
        options: >-
          --health-cmd="mysqladmin ping -h localhost -u root -proot"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
    steps:
      - uses: actions/checkout@v4
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
      - uses: ./.github/actions/setup-dependencies
        with:
          npm-cache: 'true'
      - uses: ./.github/actions/setup-cypress
      - name: Setup and run MySQL tests
        run: |
          apt-get update && apt-get install -y default-mysql-client
          echo "ServerName localhost" >> /etc/apache2/apache2.conf
          mysql -h mysql -u root -proot -e "ALTER USER 'joomla_ut'@'%' IDENTIFIED WITH mysql_native_password BY 'joomla_ut'; FLUSH PRIVILEGES;"
          mkdir /tests/www/mysql/
          cp joomla.zip /tests/www/mysql/joomla.zip
          cp dist/pkg-weblinks-current.zip /tests/www/mysql/pkg-weblinks-current.zip
          cd /tests/www/mysql/
          unzip joomla.zip
          apache2ctl -D FOREGROUND &
          chmod +rwx /root
          php installation/joomla.php install --verbose --site-name="Joomla CMS test" --admin-email=admin@example.org --admin-username=ci-admin --admin-user="jane doe" --admin-password=joomla-17082005 --db-type=mysqli --db-host=mysql --db-name=test_joomla --db-pass=joomla_ut --db-user=joomla_ut --db-encryption=0 --db-prefix=mysql_
          php cli/joomla.php config:set debug=true error_reporting=maximum
          php cli/joomla.php extension:install --path=/tests/www/mysql/pkg-weblinks-current.zip
          chmod -R 777 /tests/www/mysql/
          chown -R www-data /tests/www/mysql/
          cd $GITHUB_WORKSPACE
          npx cypress run --browser=chrome --e2e --env cmsPath=/tests/www/mysql,db_type=mysqli,db_host=mysql,db_name=test_joomla,db_user=joomla_ut,db_password=joomla_ut,db_prefix=mysql_,logFile=/var/log/apache2/error.log --config baseUrl=http://localhost/mysql,screenshotsFolder=$GITHUB_WORKSPACE/tests/cypress/output/screenshot
      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: cypress-screenshots-mysql
          path: tests/cypress/output/

  system-tests-postgres:
    runs-on: ubuntu-latest
    needs: prepare_tests
    container:
      image: joomlaprojects/docker-images:cypress8.2
    services:
      postgres:
        image: postgres:12-alpine
        env:
          POSTGRES_USER: root
          POSTGRES_PASSWORD: joomla_ut
          POSTGRES_DB: test_joomla
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - uses: actions/checkout@v4
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
      - uses: ./.github/actions/setup-dependencies
        with:
          npm-cache: 'true'
      - uses: ./.github/actions/setup-cypress
      - name: Setup and run PostgreSQL tests
        run: |
          mkdir /tests/www/pgsql/
          cp joomla.zip /tests/www/pgsql/joomla.zip
          cp dist/pkg-weblinks-current.zip /tests/www/pgsql/pkg-weblinks-current.zip
          cd /tests/www/pgsql/
          unzip joomla.zip
          apache2ctl -D FOREGROUND &
          chmod +rwx /root
          php installation/joomla.php install --verbose --site-name="Joomla CMS test" --admin-email=admin@example.org --admin-username=ci-admin --admin-user="jane doe" --admin-password=joomla-17082005 --db-type=pgsql --db-host=postgres --db-name=test_joomla --db-pass=joomla_ut --db-user=root --db-encryption=0 --db-prefix=pgsql_
          php cli/joomla.php config:set debug=true error_reporting=maximum
          php cli/joomla.php extension:install --path=/tests/www/pgsql/pkg-weblinks-current.zip
          chmod -R 777 /tests/www/pgsql/
          chown -R www-data /tests/www/pgsql/
          cd $GITHUB_WORKSPACE
          npx cypress run --browser=chrome --e2e --env cmsPath=/tests/www/pgsql,db_type=pgsql,db_host=postgres,db_name=test_joomla,db_user=root,db_password=joomla_ut,db_prefix=pgsql_,logFile=/var/log/apache2/error.log --config baseUrl=http://localhost/pgsql,screenshotsFolder=$GITHUB_WORKSPACE/tests/cypress/output/screenshot
      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: cypress-screenshots-postgres
          path: tests/cypress/output/
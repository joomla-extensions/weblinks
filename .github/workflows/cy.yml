name: CI Weblinks

on:
  push:
    branches: [ main, 5.x-dev ]
  pull_request:
    branches: [ main, 5.x-dev ]

x-checkout: &checkout
  uses: actions/checkout@v4

x-setup-deps: &setup-deps
  uses: ./.github/actions/setup-dependencies

x-setup-deps-npm: &setup-deps-npm
  uses: ./.github/actions/setup-dependencies
  with:
    npm-cache: 'true'

x-setup-cypress: &setup-cypress
  uses: ./.github/actions/setup-cypress

jobs:
  composer:
    runs-on: ubuntu-latest
    container:
      image: joomlaprojects/docker-images:php8.2
    steps:
      - <<: *checkout
      - <<: *setup-deps

  phpcs:
    runs-on: ubuntu-latest
    needs: composer
    container:
      image: joomlaprojects/docker-images:php8.2
    steps:
      - <<: *checkout
      - <<: *setup-deps
      - name: Run PHP CS Fixer and PHPCS
        run: |
          echo $(date)
          ./vendor/bin/php-cs-fixer fix -vvv --dry-run --diff
          ./vendor/bin/phpcs --extensions=php -p --standard=ruleset.xml src/
          echo $(date)

  npm:
    runs-on: ubuntu-latest
    needs: phpcs
    container:
      image: joomlaprojects/docker-images:php8.2
    steps:
      - <<: *checkout
      - <<: *setup-deps-npm

  prepare_tests:
    runs-on: ubuntu-latest
    needs: npm
    container:
      image: joomlaprojects/docker-images:php8.2
    steps:
      - <<: *checkout
      - <<: *setup-deps-npm
      - <<: *setup-cypress
      - name: Build and prepare Joomla
        run: |
          vendor/bin/robo build
          curl https://joomla.org/latest -L --output joomla.zip
          mkdir joomla
          cp joomla.zip joomla/joomla.zip
          cd joomla
          unzip joomla.zip
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            dist/
            joomla.zip

  php-tests:
    runs-on: ubuntu-latest
    needs: prepare_tests
    strategy:
      matrix:
        php-version: ['8.1', '8.2', '8.3', '8.4']
    container:
      image: joomlaprojects/docker-images:php${{ matrix.php-version }}
    steps:
      - <<: *checkout
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
      - <<: *setup-deps
      - name: Setup Joomla for tests
        run: unzip joomla.zip -d joomla/
      - name: Run PHPStan
        continue-on-error: true
        run: vendor/bin/phpstan analyse src --level=0 --no-progress
      - name: Run PHPUnit
        run: vendor/bin/phpunit

  system-tests:
    runs-on: ubuntu-latest
    needs: prepare_tests
    strategy:
      matrix:
        php-version: ['8.1', '8.2', '8.3', '8.4']
        db: [mysql, mariadb, pgsql]
        include:
          - db: mysql
            service: mysql
            image: mysql:8.0
            env:
              MYSQL_ROOT_PASSWORD: root
              MYSQL_USER: joomla_ut
              MYSQL_PASSWORD: joomla_ut
              MYSQL_DATABASE: test_joomla
            db-type: mysqli
            db-user: joomla_ut
            db-pass: joomla_ut
            db-prefix: mysql_
            db-host: mysql
            alter-user-cmd: |
              apt-get update && apt-get install -y default-mysql-client
              mysql -h mysql -u root -proot -e "ALTER USER 'joomla_ut'@'%' IDENTIFIED WITH mysql_native_password BY 'joomla_ut'; FLUSH PRIVILEGES;"
          - db: mariadb
            service: mariadb
            image: mariadb:10.11
            env:
              MARIADB_ROOT_PASSWORD: root
              MARIADB_USER: joomla_ut
              MARIADB_PASSWORD: joomla_ut
              MARIADB_DATABASE: test_joomla
            db-type: mysqli
            db-user: joomla_ut
            db-pass: joomla_ut
            db-prefix: mariadb_
            db-host: mariadb
            alter-user-cmd: |
              apt-get update && apt-get install -y mariadb-client
              # MariaDB default setup, no ALTER USER needed
          - db: pgsql
            service: postgres
            image: postgres:12-alpine
            env:
              POSTGRES_USER: root
              POSTGRES_PASSWORD: joomla_ut
              POSTGRES_DB: test_joomla
            db-type: pgsql
            db-user: root
            db-pass: joomla_ut
            db-prefix: pgsql_
            db-host: postgres
            alter-user-cmd: ""
    container:
      image: joomlaprojects/docker-images:php${{ matrix.php-version }}
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_USER: joomla_ut
          MYSQL_PASSWORD: joomla_ut
          MYSQL_DATABASE: test_joomla
        options: --health-cmd="mysqladmin ping -h localhost -u root -proot" --health-interval=10s --health-timeout=5s --health-retries=3
      mariadb:
        image: mariadb:10.11
        env:
          MARIADB_ROOT_PASSWORD: root
          MARIADB_USER: joomla_ut
          MARIADB_PASSWORD: joomla_ut
          MARIADB_DATABASE: test_joomla
        options: --health-ccmd="mariadb-admin ping -h localhost -uroot -proot" --health-interval=10s --health-timeout=5s --health-retries=3
      postgres:
        image: postgres:12-alpine
        env:
          POSTGRES_USER: root
          POSTGRES_PASSWORD: joomla_ut
          POSTGRES_DB: test_joomla
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - <<: *checkout
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
      - <<: *setup-deps-npm
      - <<: *setup-cypress
      - name: Setup and run ${{ matrix.db }} (PHP ${{ matrix.php-version }}) tests
        run: |
          ${{ matrix.alter-user-cmd }}
          mkdir -p /tests/www/${{ matrix.db }}/
          cp joomla.zip /tests/www/${{ matrix.db }}/joomla.zip
          cp dist/pkg-weblinks-current.zip /tests/www/${{ matrix.db }}/pkg-weblinks-current.zip
          cd /tests/www/${{ matrix.db }}/
          unzip joomla.zip
          apache2ctl -D FOREGROUND &
          chmod +rwx /root
          php installation/joomla.php install --verbose --site-name="Joomla CMS test" --admin-email=admin@example.org --admin-username=ci-admin --admin-user="jane doe" --admin-password=joomla-17082005 --db-type=${{ matrix.db-type }} --db-host=${{ matrix.db-host }} --db-name=test_joomla --db-pass=${{ matrix.db-pass }} --db-user=${{ matrix.db-user }} --db-encryption=0 --db-prefix=${{ matrix.db-prefix }}
          php cli/joomla.php config:set debug=true error_reporting=maximum
          php cli/joomla.php extension:install --path=/tests/www/${{ matrix.db }}/pkg-weblinks-current.zip
          chmod -R 777 /tests/www/${{ matrix.db }}/
          chown -R www-data /tests/www/${{ matrix.db }}/
          cd $GITHUB_WORKSPACE
          npx cypress run --browser=chrome --e2e --env cmsPath=/tests/www/${{ matrix.db }},db_type=${{ matrix.db-type }},db_host=${{ matrix.db-host }},db_name=test_joomla,db_user=${{ matrix.db-user }},db_password=${{ matrix.db-pass }},db_prefix=${{ matrix.db-prefix }},logFile=/var/log/apache2/error.log --config baseUrl=http://localhost/${{ matrix.db }},screenshotsFolder=$GITHUB_WORKSPACE/tests/cypress/output/screenshot
      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: cypress-screenshots-${{ matrix.db }}-php${{ matrix.php-version }}
          path: tests/cypress/output/

name: CI

on:
  push:
    branches: [ main, 5.x-dev ]
  pull_request:
    branches: [ main, 5-x-dev ]

jobs:
  composer:
    runs-on: ubuntu-latest
    container:
      image: joomlaprojects/docker-images:php8.3
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-dependencies

  phpcs:
    runs-on: ubuntu-latest
    needs: composer
    container:
      image: joomlaprojects/docker-images:php8.1
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-dependencies
      - name: Run PHP CS Fixer and PHPCS
        run: |
          echo $(date)
          ./vendor/bin/php-cs-fixer fix -vvv --dry-run --diff
          ./vendor/bin/phpcs --extensions=php -p --standard=ruleset.xml src/
          echo $(date)

  npm:
    runs-on: ubuntu-latest
    needs: phpcs
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-dependencies
        with:
          npm-cache: 'true'

  prepare_tests:
    runs-on: ubuntu-latest
    needs: npm
    container:
      image: joomlaprojects/docker-images:cypress8.2
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-dependencies
        with:
          npm-cache: 'true'
      - uses: ./.github/actions/setup-cypress
      - name: Build and prepare Joomla
        run: |
          vendor/bin/robo build
          curl https://joomla.org/latest -L --output joomla.zip
          mkdir joomla
          cp joomla.zip joomla/joomla.zip
          cd joomla
          unzip joomla.zip
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: |
            dist/
            joomla.zip

  phpstan:
    runs-on: ubuntu-latest
    needs: prepare_tests
    container:
      image: joomlaprojects/docker-images:php8.2
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-dependencies
      - name: Run PHPStan
        run: vendor/bin/phpstan

  phpunit:
    runs-on: ubuntu-latest
    needs: prepare_tests
    container:
      image: joomlaprojects/docker-images:php8.2
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-dependencies
      - name: Run PHPUnit
        run: vendor/bin/phpunit

  system-tests:
    runs-on: ubuntu-latest
    needs: prepare_tests
    container:
      image: joomlaprojects/docker-images:cypress8.2
    strategy:
      matrix:
        database:
          - type: mysql
            image: mysql:8.0
            host: mysql
            user: joomla_ut
            password: joomla_ut
            prefix: mysql_
            health_cmd: "mysqladmin ping"
            env:
              MYSQL_USER: joomla_ut
              MYSQL_PASSWORD: joomla_ut
              MYSQL_ROOT_PASSWORD: joomla_ut
              MYSQL_DATABASE: test_joomla
          - type: pgsql
            image: postgres:12-alpine
            host: postgres
            user: root
            password: joomla_ut
            prefix: pgsql_
            health_cmd: "pg_isready"
            env:
              POSTGRES_USER: root
              POSTGRES_PASSWORD: joomla_ut
              POSTGRES_DB: test_joomla
    services:
      database:
        image: ${{ matrix.database.image }}
        env: ${{ matrix.database.env }}
        options: --health-cmd="${{ matrix.database.health_cmd }}" --health-interval=10s --health-timeout=5s --health-retries=5
    steps:
      - uses: actions/checkout@v4
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts
      - uses: ./.github/actions/setup-dependencies
        with:
          npm-cache: 'true'
      - name: Setup and run tests
        run: |
          mkdir /tests/www/${{ matrix.database.type }}/
          cp joomla.zip /tests/www/${{ matrix.database.type }}/joomla.zip
          cp dist/pkg-weblinks-current.zip /tests/www/${{ matrix.database.type }}/pkg-weblinks-current.zip
          cd /tests/www/${{ matrix.database.type }}/
          unzip joomla.zip
          apache2ctl -D FOREGROUND &
          chmod +rwx /root
          php installation/joomla.php install --verbose --site-name="Joomla CMS test" --admin-email=admin@example.org --admin-username=ci-admin --admin-user="jane doe" --admin-password=joomla-17082005 --db-type=${{ matrix.database.type }} --db-host=${{ matrix.database.host }} --db-name=test_joomla --db-pass=${{ matrix.database.password }} --db-user=${{ matrix.database.user }} --db-encryption=0 --db-prefix=${{ matrix.database.prefix }}
          php cli/joomla.php config:set debug=true error_reporting=maximum
          php cli/joomla.php extension:install --path=/tests/www/${{ matrix.database.type }}/pkg-weblinks-current.zip
          chmod -R 777 /tests/www/${{ matrix.database.type }}/
          chown -R www-data /tests/www/${{ matrix.database.type }}/
          cd $GITHUB_WORKSPACE
          npx cypress run --browser=firefox --e2e --env cmsPath=/tests/www/${{ matrix.database.type }},db_type=${{ matrix.database.type }},db_host=${{ matrix.database.host }},db_name=test_joomla,db_user=${{ matrix.database.user }},db_password=${{ matrix.database.password }},db_prefix=${{ matrix.database.prefix }},logFile=/var/log/apache2/error.log --config baseUrl=http://localhost/${{ matrix.database.type }},screenshotsFolder=$GITHUB_WORKSPACE/tests/cypress/output/screenshot
      - name: Upload test results
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: cypress-screenshots-${{ matrix.database.type }}
          path: tests/cypress/output/

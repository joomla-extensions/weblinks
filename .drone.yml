---
kind: pipeline
name: default

steps:
  - name: composer
    image: joomlaprojects/docker-images:php8.3
    volumes:
      - name: composer-cache
        path: /tmp/composer-cache
    commands:
      - composer install --no-progress --ignore-platform-reqs

  - name: phpcs
    image: joomlaprojects/docker-images:php8.1
    depends_on: [ composer ]
    commands:
      - echo $(date)
      - ./vendor/bin/php-cs-fixer fix -vvv --dry-run --diff
      - ./vendor/bin/phpcs --extensions=php -p --standard=ruleset.xml src/
      - echo $(date)

  - name: npm
    image: node:20-bullseye-slim
    depends_on: [ phpcs ]
    volumes:
      - name: npm-cache
        path: /tmp/npm-cache
    environment:
      npm_config_cache: /tmp/npm-cache
    commands:
      - npm i --unsafe-perm

  - name: prepare_tests
    depends_on: [ npm ]
    image: joomlaprojects/docker-images:cypress8.2
    volumes:
      - name: cypress-cache
        path: /root/.cache/Cypress
    environment:
      CYPRESS_VERIFY_TIMEOUT: 100000
    commands:
      - mv cypress.config.dist.js cypress.config.js
      - npx cypress install
      - npx cypress verify
      - vendor/bin/robo build
      - curl https://joomla.org/latest -L --output joomla.zip
      - mkdir joomla
      - cp joomla.zip joomla/joomla.zip
      - cd joomla
      - unzip joomla.zip

  - name: phpstan
    image: joomlaprojects/docker-images:php8.2
    depends_on: [ prepare_tests ]
    failure: ignore
    commands:
      - vendor/bin/phpstan

  - name: phpunit
    image: joomlaprojects/docker-images:php8.2
    depends_on: [ prepare_tests ]
    commands:
      - vendor/bin/phpunit

  - name: phpmin-system-mysql
    depends_on: [ prepare_tests ]
    image: joomlaprojects/docker-images:cypress8.2
    volumes:
      - name: cypress-cache
        path: /root/.cache/Cypress
    commands:
      - mkdir /tests/www/mysql/
      - cp joomla.zip /tests/www/mysql/joomla.zip
      - cp dist/pkg-weblinks-current.zip /tests/www/mysql/pkg-weblinks-current.zip
      - cd /tests/www/mysql/
      - unzip joomla.zip
      - apache2ctl -D FOREGROUND &
      - chmod +rwx /root
      - php installation/joomla.php install --verbose --site-name="Joomla CMS test" --admin-email=admin@example.org --admin-username=ci-admin --admin-user="jane doe" --admin-password=joomla-17082005 --db-type=mysqli --db-host=mysql --db-name=test_joomla --db-pass=joomla_ut --db-user=joomla_ut --db-encryption=0 --db-prefix=mysql_
      - php cli/joomla.php config:set debug=true error_reporting=maximum
      - php cli/joomla.php extension:install --path=/tests/www/mysql/pkg-weblinks-current.zip
      - chmod -R 777 /tests/www/mysql/
      - chown -R www-data /tests/www/mysql/
      - cd /drone/src
      - npx cypress run --browser=firefox --e2e --env cmsPath=/tests/www/mysql,db_type=mysqli,db_host=mysql,db_name=test_joomla,db_user=joomla_ut,db_password=joomla_ut,db_prefix=mysql_ --config baseUrl=http://localhost/mysql,screenshotsFolder=/drone/src/tests/cypress/output/screenshot

  - name: phpmin-system-postgres
    depends_on: [ prepare_tests ]
    image: joomlaprojects/docker-images:cypress8.2
    volumes:
      - name: cypress-cache
        path: /root/.cache/Cypress
    commands:
      - mkdir /tests/www/pgsql/
      - cp joomla.zip /tests/www/pgsql/joomla.zip
      - cp dist/pkg-weblinks-current.zip /tests/www/pgsql/pkg-weblinks-current.zip
      - cd /tests/www/pgsql/
      - unzip joomla.zip
      - apache2ctl -D FOREGROUND &
      - chmod +rwx /root
      - php installation/joomla.php install --verbose --site-name="Joomla CMS test" --admin-email=admin@example.org --admin-username=ci-admin --admin-user="jane doe" --admin-password=joomla-17082005 --db-type=pgsql --db-host=postgres --db-name=test_joomla --db-pass=joomla_ut --db-user=root --db-encryption=0 --db-prefix=pgsql_
      - php cli/joomla.php config:set debug=true error_reporting=maximum
      - php cli/joomla.php extension:install --path=/tests/www/pgsql/pkg-weblinks-current.zip
      - chmod -R 777 /tests/www/pgsql/
      - chown -R www-data /tests/www/pgsql/
      - cd /drone/src
      - npx cypress run --browser=firefox --e2e --env cmsPath=/tests/www/pgsql,db_type=pgsql,db_host=postgres,db_name=test_joomla,db_user=root,db_password=joomla_ut,db_prefix=pgsql_ --config baseUrl=http://localhost/pgsql,screenshotsFolder=/drone/src/tests/cypress/output/screenshot

  - name: artifacts-system-tests
    image: joomlaprojects/docker-images:packager
    depends_on:
      - phpmin-system-mysql
      - phpmin-system-postgres
    environment:
      WEB_SERVER:
        from_secret: webserver
      FTP_KEY:
        from_secret: ftp_key
      FTP_USER:
        from_secret: ftp_user
      FTP_HOST:
        from_secret: ftp_host
      ARTIFACTS_ROOT:
        from_secret: artifacts_root
      GITHUB_TOKEN:
        from_secret: github_token
    commands:
      - export PLUGIN_DEST_DIR=$DRONE_REPO/$DRONE_BRANCH/$DRONE_PULL_REQUEST/system-tests/$DRONE_BUILD_NUMBER
      - echo https://$WEB_SERVER/drone/$PLUGIN_DEST_DIR
      - mkdir -p ~/.ssh
      - eval $(ssh-agent -s)
      - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
      - echo "$FTP_KEY" > ~/.ssh/id_rsa
      - chmod 600 ~/.ssh/id_rsa
      - ssh-add
      - rclone config create artifacts sftp host $FTP_HOST user $FTP_USER port 22
      - rclone mkdir artifacts:$ARTIFACTS_ROOT/$DRONE_REPO/$DRONE_BRANCH/$DRONE_PULL_REQUEST/system-tests/$DRONE_BUILD_NUMBER
      - rclone copy tests/cypress/output/ artifacts:$ARTIFACTS_ROOT/$DRONE_REPO/$DRONE_BRANCH/$DRONE_PULL_REQUEST/system-tests/$DRONE_BUILD_NUMBER
      - 'curl -X POST "https://api.github.com/repos/$DRONE_REPO/statuses/$DRONE_COMMIT" -H "Content-Type: application/json" -H "Authorization: token $GITHUB_TOKEN" -d "{\"state\":\"failure\", \"context\": \"Artifacts from Failure\", \"description\": \"You can find artifacts from the failure of the build here:\", \"target_url\": \"https://$WEB_SERVER/drone/$PLUGIN_DEST_DIR\"}" > /dev/null'
    when:
      status:
        - failure

volumes:
  - name: weblinks_cache
    host:
      path: /tmp/weblinks_cache
  - name: composer-cache
    host:
      path: /tmp/composer-cache
  - name: cypress-cache
    host:
      path: /tmp/cypress-cache
  - name: npm-cache
    host:
      path: /tmp/npm-cache

services:
  - name: mysql
    image: mysql:8.0
    command: ["--default-authentication-plugin=mysql_native_password"]
    environment:
      MYSQL_USER: joomla_ut
      MYSQL_PASSWORD: joomla_ut
      MYSQL_ROOT_PASSWORD: joomla_ut
      MYSQL_DATABASE: test_joomla

  - name: postgres
    image: postgres:12-alpine
    ports:
      - 5432
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: joomla_ut
      POSTGRES_DB: test_joomla

---
kind: signature
hmac: 9c3516344573b2f9b8a82077258c15ae52fcc45d55eb8ef059258c778a06f35b

...
